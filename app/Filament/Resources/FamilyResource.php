<?php

namespace App\Filament\Resources;

use App\Filament\Resources\FamilyResource\Pages;
use App\Filament\Resources\FamilyResource\RelationManagers;
use App\Models\BigFamily;
use App\Models\Family;
use Filament\Forms;
use Filament\Forms\Components\TextInput;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Actions\BulkAction;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;
use Illuminate\Support\Collection;
use Livewire\Attributes\On;

class FamilyResource extends Resource
{
    protected static ?string $model = Family::class;

    protected static ?string $navigationIcon = 'heroicon-o-rectangle-stack';
    protected static ?string $navigationLabel='اسماء العائلات';





    public static function getNavigationBadge(): ?string
    {
        return static::getModel()::count(); // TODO: Change the autogenerated stub
    }

    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                TextInput::make('FamName')
                ->label('اسم العائلة'),
                Forms\Components\Select::make('big_family_id')
                    ->searchable()
                    ->required()
                    ->preload()
                    ->relationship('Big_Family','name')
                    ->createOptionForm([
                        TextInput::make('name')
                            ->required()
                            ->label('اسم القبيلة')
                            ->maxLength(255)
                            ->required(),
                    ])
                    ->editOptionForm([
                        TextInput::make('name')
                            ->required()
                            ->label('اسم القبيلة')
                            ->maxLength(255)
                            ->required(),
                    ])
                    ->label('القبيلة'),
                Forms\Components\Select::make('familyshow_id')
                    ->searchable()
                    ->required()
                    ->preload()
                    ->relationship('Familyshow','name')
                    ->label('العائلة الكبري'),
                Forms\Components\Select::make('tribe_id')
                  ->searchable()
                  ->required()
                  ->preload()
                  ->relationship('Tribe','TriName')
                  ->createOptionForm([
                    TextInput::make('TriName')
                      ->required()
                      ->label('اسم القبيلة')
                      ->maxLength(255)
                      ->required(),
                  ])
                  ->editOptionForm([
                    TextInput::make('TriName')
                      ->required()
                      ->label('اسم القبيلة')
                      ->maxLength(255)
                      ->required(),
                  ])
                  ->label('التركيبة الاجتماعية'),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('id')
                    ->label('id'),
                Tables\Columns\TextColumn::make('FamName')
                 ->searchable()
                 ->label('الاسم'),
                Tables\Columns\SelectColumn::make('big_family_id')
                  ->options(BigFamily::all()->pluck('name','id'))
                  ->label('القبيلة'),
                Tables\Columns\TextColumn::make('Tribe.TriName')
                    ->label('التركيبة الاجتماعية'),
                Tables\Columns\TextColumn::make('victim_count')
                  ->sortable()
                  ->label('العدد')
                  ->counts('Victim'),
                Tables\Columns\IconColumn::make('ok')
                 ->label('انتهت مراجعتها')
                  ->sortable()
                 ->action(function (Family $record){
                   if ($record->ok==0) $record->update(['ok'=>1]) ;else $record->update(['ok'=>0]);
                 })
                 ->boolean(),
              Tables\Columns\TextColumn::make('who')
               ->action(
                 Tables\Actions\Action::make('updateBy')
                  ->form([
                    Forms\Components\TextInput::make('who')
                     ->label('بمعرفة')
                  ])
                   ->fillForm(fn (Family $record): array => [
                     'who' => $record->who,
                   ])
                 ->modalCancelActionLabel('عودة')
                 ->modalSubmitActionLabel('تحزين')
                 ->modalHeading('ادحال وتعديل بمعرفة')
                 ->action(function (array $data,Family $record,){
                   $record->update(['who'=>$data['who']]);
                 })
               )
                ->sortable()
               ->label('بمعرفة'),
              Tables\Columns\TextColumn::make('nation')
                ->action(
                  Tables\Actions\Action::make('updatenation')
                    ->form([
                      Forms\Components\TextInput::make('nation')
                        ->label('الجنسية')
                    ])
                    ->fillForm(fn (Family $record): array => [
                      'nation' => $record->nation,
                    ])
                    ->modalCancelActionLabel('عودة')
                    ->modalSubmitActionLabel('تحزين')
                    ->modalHeading('ادحال وتعديل بمعرفة')
                    ->action(function (array $data,Family $record,){
                      $record->update(['nation'=>$data['nation']]);
                    })
                )
                ->label('الجنسية'),

            ])
            ->filters([
              Tables\Filters\SelectFilter::make('فلترة بالقبيلة')
                ->searchable()
                ->relationship('Tribe','TriName'),
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
            ])
            ;
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListFamilies::route('/'),
            'create' => Pages\CreateFamily::route('/create'),
            'edit' => Pages\EditFamily::route('/{record}/edit'),
            'modifyfamily' => Pages\ModifyFam::route('/modifyfamily'),
        ];
    }
}
